% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/METACLUSTER_algorithm.R
\name{run_METACLUSTER}
\alias{run_METACLUSTER}
\title{run Metacluster algorithm}
\usage{
run_METACLUSTER(m.foldChange_differentialExpression,
  m.pvalue_differentialExpression, df.experiment_condition_annotation,
  df.geneCluster, tb.condition_treatments, tb.condition_tissues,
  n.cpus = 3,
  b.load_codifferentialAnalysis_monteCarloSimulation = "yes",
  pvalue_DifferentialExpression = 0.05,
  probability_codifferentialExpression_MonteCarloSimulation = 0.95,
  pvalue_coexpression_distribution = 0.05,
  pvalue_geneClusterPrediction = 0.05,
  pvalue_geneClusterConsistency = 0.05,
  pvalue_treatment_per_condition = 0.05,
  pvalue_tissue_per_condition = 0.05,
  th.consistent_condition_presence_percentage = 0.7,
  min_number_of_genes = 3,
  number_codifferentialExpression_MonteCarloSimulations = 3,
  number_conditionSpecificCoexpressionBackgroundGenePairs = 100,
  min_number_condition_samples = 1, seed = 1234, heatmap_width = 10,
  heatmap_height = 6, foldername.tmp = "tmp/",
  foldername.results = "results/")
}
\arguments{
\item{m.foldChange_differentialExpression}{differential expression foldchange matrix - rows are genes, cols are experiments}

\item{m.pvalue_differentialExpression}{differential expression pvalue matrix - rows are genes, cols are experiments}

\item{df.experiment_condition_annotation}{experiment condition annotation}

\item{df.geneCluster}{gene cluster dataset}

\item{tb.condition_treatments}{table of conditions}

\item{tb.condition_tissues}{table of tissues}

\item{n.cpus}{number of cores used}

\item{b.load_codifferentialAnalysis_monteCarloSimulation}{load codifferential expression data ("yes", "no")}

\item{pvalue_DifferentialExpression}{pvalue treshold for differential expession (default = 0.05)}

\item{probability_codifferentialExpression_MonteCarloSimulation}{probability threshold codifferential expression (default = 0.05)}

\item{pvalue_coexpression_distribution}{pvalue treshold context specific coexpression (default = 0.05)}

\item{pvalue_geneClusterPrediction}{pvalue gene cluster inference enzyme presence (default = 0.05)}

\item{pvalue_geneClusterConsistency}{pvalue gene cluster enzyme condition consistency (default = 0.05)}

\item{pvalue_treatment_per_condition}{pvalue gene pair condition annotation (default = 0.05)}

\item{pvalue_tissue_per_condition}{pvalue gene pair tissue annotation (default = 0.05)}

\item{th.consistent_condition_presence_percentage}{percentage of gene cluster enyzmes that are expressed in each condition in order to annotate the condition to the cluster (default = 0.7}

\item{min_number_of_genes}{min number of enzymes per gene cluster (default = 3)}

\item{number_codifferentialExpression_MonteCarloSimulations}{number of codiffernetial expression background monte carlo simulations (default = 3)}

\item{number_conditionSpecificCoexpressionBackgroundGenePairs}{number of context specific coexpression simulation background gene pairs (default = 50)}

\item{min_number_condition_samples}{minimum number of condition samples for significance test (default 1)}

\item{heatmap_width}{default = 10}

\item{heatmap_height}{default = 5}

\item{foldername.tmp}{temp file folder name (default = /tmp)}

\item{foldername.results}{results file folder name (default = /results)}

\item{v.conditionGroups}{treatment and condition map}

\item{v.tissueGroups}{tissue maps}
}
\value{
a list of results
}
\description{
This function runs the condition specific gene cluster annotation
}
\examples{

# install_and_load_libraries()

# set directory to dataset directory, e.g. /User/home/athaliana_schlapfer2017/
setwd(...)


message("load datasets")
l.data = load_datasets(input_format = "PCF2017",
                       filename.genes = "data/genes.txt",
                       filename.experiment_series_ids = "data/experiment_series_ids.txt",
                       filename.geneCluster = "data/ath_geneInCluster_3_aracyc.txt-labeled_NoHypoGenes.txt",
                       filename.foldChange_differentialExpression = "data/m.foldChange_differentialExpression.txt",
                       filename.pvalue_differentialExpression =	"data/m.pvalue_differentialExpression.txt",
                       filename.experiment_condition_tissue_annotation ="data/df.experiment_condition_annotation.txt")

message("run METACLUSTER")
l.results = run_METACLUSTER(m.foldChange_differentialExpression = l.data$m.foldChange_differentialExpression,
                            m.pvalue_differentialExpression = l.data$m.pvalue_differentialExpression,
                            df.experiment_condition_annotation = l.data$df.experiment_condition_annotation,
                            df.geneCluster = l.data$df.geneCluster,
                            tb.condition_treatments = l.data$tb.condition_treatments,
                            tb.condition_tissues = l.data$tb.condition_tissues,
                            n.cpus = 3,
                            b.load_codifferentialAnalysis_monteCarloSimulation = "yes",
                            pvalue_DifferentialExpression = 0.05,
                            probability_codifferentialExpression_MonteCarloSimulation = 0.95,
                            pvalue_coexpression_distribution = 0.05,
                            pvalue_geneClusterPrediction = 0.05,
                            pvalue_geneClusterConsistency = 0.05,
                            pvalue_treatment_per_condition = 0.05,
                            pvalue_tissue_per_condition = 0.05,
                            th.consistent_condition_presence_percentage = 0.7,
                            min_number_of_genes = 3,
                            number_codifferentialExpression_MonteCarloSimulations = 3,
                            number_conditionSpecificCoexpressionBackgroundGenePairs = 100,
                            min_number_condition_samples = 1,
                            seed = 1234,
                            heatmap_width = 10, 
                            heatmap_height = 5,
                            foldername.tmp = "tmp/", 
                            foldername.results = "results/")
                            
print(head(l.results$df.cluster_annotations))

evaluate_and_store_results(df.cluster_annotations=l.results$df.cluster_annotations,
                           df.experiment_condition_annotation = l.data$df.experiment_condition_annotation,
                           m.functionality=l.results$m.functionality, 
                           heatmap_width = 10, heatmap_height = 5,
                           foldername.results = "results/")
}
